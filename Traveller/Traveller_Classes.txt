4/20/23
Reviewing classes, esp. w.r.t. JSON representation.
Focusing on System for now as that's where most of the effort
is going (and outside this cluster classes are mostly app scaffolding).

                                          VERIFY JSON
=====================================     =================================
System
-------------------------------------
Polygon hex                                n/a - regenerate on load
Coordinate coord                           OK (JSONObject)
Boolean occupied                           OK (primitive)
UWP uwp                                    OK (JSONObject)
Boolean navalBase                          OK (primitive)
Boolean scoutBase                          OK (primitive)
Boolean gasGiant                           OK (primitive)
TradeClass trade                           n/a - regenerate on load
String name                                OK (primitive)
ArrayList<Route> routes                    n/a - regenerate from separate list
-------------------------------------
System(Coordinate)
System(JSONObject)

TradeClass generateTradeClass(UWP)
UWP generateUWP()
UWP generateUWP(JSONObject)
Boolean generateScoutBase()
Boolean generateNavalBase()

void addRoute(Route)
int distanceToSystem(System)
String listRoutes()

String toString()
JSONObject asJSON()
=====================================

=====================================
System_CT81 extends System
-------------------------------------
String travelZone                          OK (primitive)
-------------------------------------
System_CT81(Coordinate)
System_CT81(JSONObject)

TradeClass generateTradeClass(UWP)
UWP generateUWP()
UWP generateUWP(JSONObject)
String generateTravelZone()

String toString()
JSONObject asJSON()
=====================================

=====================================
System_ScoutsEx extends System_CT81
-------------------------------------
Star primary                               OK (JSONObject)
-------------------------------------
System_ScoutsEx(Coordinate)
System_ScoutsEx(JSONObject)

String toString()
JSONObject asJSON()
=====================================


=====================================
abstract Orbit
-------------------------------------
Orbit barycenter                           ??
String name                                ??
int orbitNumber                            OK (primitive on subclasses)
String orbitalZone                         ??
Dice roll                                  n/a - regenerate on load
-------------------------------------
Orbit(Orbit, int, String)

Boolean isOrbitingClassM()
Boolean isInnerZone()
Boolean isHabitableZone()
Boolean isOuterZone()
Boolean isAtLeastTwoBeyondHabitable()

Boolean isStar()
Boolean isEmpty()
Boolean isForbidden()
Boolean isNull()
Boolean isGasGiant()
Boolean isPlanet()
Boolean isPlanetoid()
Boolean isMoon()
Boolean isRing()

String toString()
=====================================


// we are using 'star class' to pack three
// values into a string - should the fields change to match?
// just supply methods for when a client need to know type etc.

// also rename the 'get' methods - they look like accessors
// but are actually creational

// String unpacking alone may not be enough data -
// the orbitNumber needs to be added as well (special cases
// for primary and close companion - null & -1? - don't 
// like these 'magic numbers' though)

// we also have overlap/conflict between orbits & companion
// lists when loaded from JSON - fix!   ASSESS, companions is now a query

// companion might be better as a query against orbits[]  - DONE!
// and by extension could do the same for other categories of satellite
=====================================
Star extends Orbit                         
-------------------------------------
System parent                              n/a - regenerate on load
Boolean primary                            n/a - regenerate on load
int typeRoll                               n/a - only needed at creation time
int sizeRoll                               n/a - only needed at creation time

char type                                  OK (String unpacking)
int decimal                                OK (String unpacking)
int size                                   OK (String unpacking)

//ArrayList<Star> companions           OK (JSONArray - JSONObjects) DEPRECATED
Star closeCompanion                        OK (JSONObject)
Orbit[] orbits                             OK (JSONArray - Strings)
String[] orbitalZones                      OK - regenerate on load
int gasGiantCount                          TBD (probably regen on load)
-------------------------------------
Star(Boolean, System)
Star(Boolean, System, String)              DEPRECATE
Star(Boolean, System, JSONObject)

Boolean isStar()

char generateType()
int generateSize()
void classFromString(String)
String[] retrieveOrbitalZones()

void createSatellites()
int generateCompanionCount()
int generateCompanionOrbits()
int calculateMaxOrbits()
Orbit[] createOrbits(int, int)
void placeCompanions(int, int)
void placeNullOrbits()
void placeEmptyOrbits(int, int)
void placeForbiddenOrbits()
void placeCapturedPlanets()                STUB, needs some thought
void placeGasGiants()
void placePlanetoidBelts()
void placePlanets()
int getRandomNullOrbit()
IntList availableOrbitsForGiants()
IntList availableOrbitsForPlanetoids()

ArrayList<Star> getCompanions()

Boolean orbitIsTooHot(int)
Boolean orbitIsNull(int)
Boolean orbitIsNullOrEmpty(int)
Boolean orbitInsideStar(int)
Boolean orbitIsFar(int)
Boolean orbitMaskedByCompanion(int)

String sizeToString()
int sizeFromString()

String toString()
JSONObject asJSON()
=====================================

=====================================
Empty extends Orbit
-------------------------------------
-------------------------------------
Empty(Star, int, String)

Boolean isEmpty()
=====================================

// long term this one and Empty may merge together
// but for now it helps to visualize the algorithm steps
// (what if they had a 'memo' field instead?)
=====================================
Forbidden extends Orbit
-------------------------------------
-------------------------------------
Forbidden(Star, int, String)

Boolean isForbidden()
=====================================

// null object added to help build out the
// algorithm - should only exist while the
// system is being populated
// unclear if this will stay in the final design
=====================================
Null extends Orbit
-------------------------------------
-------------------------------------
Null(Star, int, String)

Boolean isNull()
=====================================

=====================================
GasGiant extends Orbit
-------------------------------------
String size                                TBD
Habitable[] moons                          TBD
-------------------------------------
GasGiant(Star, int, String)

Boolean isGasGiant()

String toString()                 overloaded to show moon list structure
=====================================

=====================================
abstract Habitable extends Orbit
-------------------------------------
UWP_ScoutsEx uwp                           TBD - implemented in subclasses
-------------------------------------
Habitable(Orbit, int, String)

abstract UWP_ScoutsEx generateUWP()
=====================================

=====================================
Planet extends Habitable
-------------------------------------
Habitable[] moons                          TBD
-------------------------------------
Planet(Orbit, int, String)

UWP_ScoutsEx generateUWP()

Boolean isPlanet()

String toString()                 overloaded to show moon list structure
=====================================

=====================================
Planetoid extends Habitable
-------------------------------------
-------------------------------------
Planetoid(Orbit, int, String)

UWP_ScoutsEx generateUWP()

Boolean isPlanetoid()
=====================================

// still assessing whether following are
// useful - could also implement this
// via queries alone (class + barycenter.class)

=====================================
Moon extends Planet
-------------------------------------
-------------------------------------
Moon(Orbit, String)

Boolean isMoon()
=====================================

=====================================
Ring extends Planetoid
-------------------------------------
-------------------------------------
Ring(Orbit, String)

Boolean isRing()
=====================================


May need to rejigger the Orbit hierarchy. We have three kinds of things
in this tree that need to be mixed together:

- objects that orbit other objects (Orbit hierarchy)
- objects that can have other objects orbiting them (Orbit superclass)
- objects that have a UWP (Habitable superclass)

The first two are the Composite pattern. The contrast between Gas Giant & Planet
on the one hand, and Planet/Moon vs. Planetoid/Ring are the crux of
the matter.

There's shared implementation in both Orbit & Habitable that's worth keeping,
so can't just make one an interface without moving some things around. This 
could be motivation to pull all the query methods up from Habitable. Then
it could be an interface that exposes the UWP mechanics.

                      |   TRUE             |   FALSE          |
----------------------|--------------------|------------------|
Can have children     |   (Orbit)          |   (Habitable)    |
                      |   Star             |   Empty          |
                      |   Gas Giant        |   Forbidden      |
                      |   Planet           |   Null           |
                      |                    |   Planetoid      |
                      |                    |   Moon           |
                      |                    |   Ring           |
----------------------|--------------------|------------------|
Has a UWP             |   (Habitable)      |   (Orbit)        |
                      |   Planet           |   Star           |
                      |   Moon             |   Gas Giant      |
                      |   Planetoid        |   Empty          |
                      |   Ring             |   Forbidden      |
                      |                    |   Null           |
----------------------|--------------------|------------------|

